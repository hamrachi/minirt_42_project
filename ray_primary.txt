Coordinate System Visualization:=-=-=-=-=-=-

3D Ray Generation Space:

        Y (Up Vector)
        |
        |   
        |  
        |  Vertical Offset ↗
        +-----X (Right Vector)
       /
      / Forward Vector
     Z

Ray Generation Process=-=-=-=-=-=-

     Screen Coordinate Mapping:
- (u, v) represents pixel coordinates
  - u: Horizontal position (-1 to 1)
  - v: Vertical position (-1 to 1)

Ray Direction Calculation:
1. Vertical Offset:   v * height * UP vector
2. Horizontal Offset: u * width * RIGHT vector
3. Base Forward Direction
4. Combine All Vectors
5. Normalize

Examples:
- (0, 0)   → Exactly forward
- (1, 1)   → Top-right corner
- (-1, -1) → Bottom-left corner

Mathematical Transformation=-=-=-=-=-=-

Coordinate Mapping:
Screen Space (2D) → 3D Ray Direction

Transformation:
1. Scale vertical position:   v * cam->height
2. Scale horizontal position: u * cam->width
3. Project onto camera vectors
4. Combine with forward direction

Visualization of Ray Paths=-=-=-=-=-=-

Camera View Frustum:

       ^  Top (v = 1)
       |
       |
 Left  |  Right
   ←---+---→
       |
       | Center (u,v = 0)
       ↓
    Bottom (v = -1)

    Key Insights

Converts 2D screen coordinates to 3D ray
Uses camera's coordinate system (up, right, forward)
Scales offsets based on camera dimensions
Ensures ray is a unit vector